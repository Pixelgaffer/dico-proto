// Code generated by protoc-gen-go.
// source: task-status.proto
// DO NOT EDIT!

package dicoprotos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TaskStatus_TaskStatusUpdate int32

const (
	TaskStatus_REGISTERED TaskStatus_TaskStatusUpdate = 0
	TaskStatus_STARTED    TaskStatus_TaskStatusUpdate = 1
	TaskStatus_FINISHED   TaskStatus_TaskStatusUpdate = 2
	TaskStatus_FAILED     TaskStatus_TaskStatusUpdate = 3
)

var TaskStatus_TaskStatusUpdate_name = map[int32]string{
	0: "REGISTERED",
	1: "STARTED",
	2: "FINISHED",
	3: "FAILED",
}
var TaskStatus_TaskStatusUpdate_value = map[string]int32{
	"REGISTERED": 0,
	"STARTED":    1,
	"FINISHED":   2,
	"FAILED":     3,
}

func (x TaskStatus_TaskStatusUpdate) Enum() *TaskStatus_TaskStatusUpdate {
	p := new(TaskStatus_TaskStatusUpdate)
	*p = x
	return p
}
func (x TaskStatus_TaskStatusUpdate) String() string {
	return proto.EnumName(TaskStatus_TaskStatusUpdate_name, int32(x))
}
func (x *TaskStatus_TaskStatusUpdate) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TaskStatus_TaskStatusUpdate_value, data, "TaskStatus_TaskStatusUpdate")
	if err != nil {
		return err
	}
	*x = TaskStatus_TaskStatusUpdate(value)
	return nil
}
func (TaskStatus_TaskStatusUpdate) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor5, []int{0, 0}
}

type TaskStatus struct {
	Id               *int64                       `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Options          *string                      `protobuf:"bytes,2,req,name=options" json:"options,omitempty"`
	Type             *TaskStatus_TaskStatusUpdate `protobuf:"varint,3,req,name=type,enum=dicoprotos.TaskStatus_TaskStatusUpdate" json:"type,omitempty"`
	Runtime          *int64                       `protobuf:"varint,4,opt,name=runtime" json:"runtime,omitempty"`
	WorkerId         *int64                       `protobuf:"varint,5,opt,name=worker_id" json:"worker_id,omitempty"`
	TaskGroup        *int64                       `protobuf:"varint,6,opt,name=task_group" json:"task_group,omitempty"`
	Retries          *int64                       `protobuf:"varint,7,opt,name=retries,def=0" json:"retries,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *TaskStatus) Reset()                    { *m = TaskStatus{} }
func (m *TaskStatus) String() string            { return proto.CompactTextString(m) }
func (*TaskStatus) ProtoMessage()               {}
func (*TaskStatus) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

const Default_TaskStatus_Retries int64 = 0

func (m *TaskStatus) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *TaskStatus) GetOptions() string {
	if m != nil && m.Options != nil {
		return *m.Options
	}
	return ""
}

func (m *TaskStatus) GetType() TaskStatus_TaskStatusUpdate {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return TaskStatus_REGISTERED
}

func (m *TaskStatus) GetRuntime() int64 {
	if m != nil && m.Runtime != nil {
		return *m.Runtime
	}
	return 0
}

func (m *TaskStatus) GetWorkerId() int64 {
	if m != nil && m.WorkerId != nil {
		return *m.WorkerId
	}
	return 0
}

func (m *TaskStatus) GetTaskGroup() int64 {
	if m != nil && m.TaskGroup != nil {
		return *m.TaskGroup
	}
	return 0
}

func (m *TaskStatus) GetRetries() int64 {
	if m != nil && m.Retries != nil {
		return *m.Retries
	}
	return Default_TaskStatus_Retries
}

func init() {
	proto.RegisterType((*TaskStatus)(nil), "dicoprotos.TaskStatus")
	proto.RegisterEnum("dicoprotos.TaskStatus_TaskStatusUpdate", TaskStatus_TaskStatusUpdate_name, TaskStatus_TaskStatusUpdate_value)
}

var fileDescriptor5 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x4d, 0x3b, 0x57, 0xf7, 0x94, 0xfd, 0xc8, 0x29, 0x78, 0x1a, 0xbb, 0xe8, 0x65, 0x45,
	0x04, 0x2f, 0xde, 0x36, 0xec, 0x34, 0x20, 0x22, 0x6d, 0x3d, 0x8f, 0xd2, 0x06, 0x0d, 0xa3, 0x4b,
	0x48, 0x5e, 0x91, 0xfe, 0xe5, 0x5e, 0x7d, 0xad, 0x42, 0x05, 0x6f, 0xef, 0xfb, 0xe1, 0xf1, 0xf9,
	0xbe, 0x04, 0x16, 0x58, 0xf8, 0xc3, 0xda, 0x63, 0x81, 0x8d, 0x8f, 0xad, 0x33, 0x68, 0x38, 0x54,
	0xba, 0x34, 0xfd, 0xe8, 0x57, 0x5f, 0x0c, 0x20, 0xa7, 0x8d, 0xac, 0x5f, 0xe0, 0x00, 0x81, 0xae,
	0x04, 0x5b, 0x06, 0xd7, 0x21, 0x9f, 0x41, 0x64, 0x2c, 0x6a, 0x73, 0xf4, 0x22, 0x20, 0x30, 0xe1,
	0x77, 0x30, 0xc2, 0xd6, 0x2a, 0x11, 0x52, 0x9a, 0xde, 0x5e, 0xc5, 0x83, 0x26, 0x1e, 0x14, 0x7f,
	0xc6, 0x37, 0x5b, 0x15, 0xa8, 0x3a, 0x8f, 0x6b, 0x8e, 0xa8, 0x6b, 0x25, 0x46, 0x4b, 0x46, 0xe2,
	0x05, 0x4c, 0x3e, 0x8d, 0x3b, 0x28, 0xb7, 0xa7, 0xae, 0xd3, 0x1e, 0x51, 0x71, 0x77, 0xe7, 0xfe,
	0xdd, 0x99, 0xc6, 0x8a, 0xf1, 0x2f, 0x8b, 0x9c, 0x42, 0xa7, 0x95, 0x17, 0x51, 0x07, 0xee, 0xd9,
	0xcd, 0x4a, 0xc2, 0xfc, 0x9f, 0x7f, 0x0a, 0x90, 0x26, 0x8f, 0x32, 0xcb, 0x93, 0x34, 0x79, 0x98,
	0x9f, 0xf0, 0x73, 0x88, 0xb2, 0x7c, 0x93, 0xe6, 0x14, 0x18, 0xbf, 0x80, 0xb3, 0x9d, 0x7c, 0x91,
	0xd9, 0x13, 0xa5, 0x80, 0x5a, 0xc6, 0xbb, 0x8d, 0x7c, 0xa6, 0x39, 0xdc, 0xae, 0xe1, 0xb2, 0x34,
	0x75, 0x5c, 0x7e, 0x28, 0xe7, 0x5a, 0xba, 0xa7, 0xee, 0xdf, 0xf3, 0xf3, 0x45, 0x7e, 0x3b, 0x1b,
	0x6a, 0x5e, 0x3b, 0xf2, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x62, 0x6b, 0x43, 0x7c, 0x48, 0x01, 0x00,
	0x00,
}
