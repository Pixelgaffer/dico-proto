// Code generated by protoc-gen-go.
// source: submit-task.proto
// DO NOT EDIT!

package dicoprotos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SubmitTask struct {
	Multi            *bool   `protobuf:"varint,1,req,name=multi,def=1" json:"multi,omitempty"`
	Options          *string `protobuf:"bytes,2,req,name=options" json:"options,omitempty"`
	JobType          *string `protobuf:"bytes,3,req,name=job_type" json:"job_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubmitTask) Reset()                    { *m = SubmitTask{} }
func (m *SubmitTask) String() string            { return proto.CompactTextString(m) }
func (*SubmitTask) ProtoMessage()               {}
func (*SubmitTask) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

const Default_SubmitTask_Multi bool = true

func (m *SubmitTask) GetMulti() bool {
	if m != nil && m.Multi != nil {
		return *m.Multi
	}
	return Default_SubmitTask_Multi
}

func (m *SubmitTask) GetOptions() string {
	if m != nil && m.Options != nil {
		return *m.Options
	}
	return ""
}

func (m *SubmitTask) GetJobType() string {
	if m != nil && m.JobType != nil {
		return *m.JobType
	}
	return ""
}

func init() {
	proto.RegisterType((*SubmitTask)(nil), "dicoprotos.SubmitTask")
}

var fileDescriptor5 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2e, 0x4d, 0xca,
	0xcd, 0x2c, 0xd1, 0x2d, 0x49, 0x2c, 0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4a,
	0xc9, 0x4c, 0xce, 0x07, 0x33, 0x8b, 0x95, 0x5c, 0xb8, 0xb8, 0x82, 0xc1, 0x0a, 0x42, 0x80, 0xf2,
	0x42, 0xc2, 0x5c, 0xac, 0xb9, 0xa5, 0x39, 0x25, 0x99, 0x12, 0x8c, 0x0a, 0x4c, 0x1a, 0x1c, 0x56,
	0x2c, 0x25, 0x45, 0xa5, 0xa9, 0x42, 0xfc, 0x5c, 0xec, 0xf9, 0x05, 0x25, 0x99, 0xf9, 0x79, 0xc5,
	0x12, 0x4c, 0x40, 0x61, 0x4e, 0x21, 0x01, 0x2e, 0x8e, 0xac, 0xfc, 0xa4, 0xf8, 0x92, 0xca, 0x82,
	0x54, 0x09, 0x66, 0x90, 0x88, 0x93, 0x2e, 0x97, 0x54, 0x72, 0x7e, 0xae, 0x5e, 0x72, 0x46, 0x6a,
	0x51, 0x51, 0x65, 0x79, 0x7e, 0x51, 0xae, 0x1e, 0xc8, 0x0a, 0x88, 0x75, 0xc5, 0x4e, 0xfc, 0x08,
	0x1b, 0x02, 0x40, 0x22, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xe2, 0xf7, 0x78, 0x94, 0x00,
	0x00, 0x00,
}
